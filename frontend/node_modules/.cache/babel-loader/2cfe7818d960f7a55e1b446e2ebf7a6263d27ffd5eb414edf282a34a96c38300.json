{"ast":null,"code":"var _jsxFileName = \"/Users/zxh/0.Me/Mylearn/AIcoding/mywork/interview-assistant-react_stroop/frontend/src/pages/Interview.jsx\",\n  _s = $RefreshSig$();\n// frontend/src/pages/Interview.jsx\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport QuestionDisplay from '../components/QuestionDisplay';\nimport AnswerSection from '../components/AnswerSection';\nimport GenerateSection from '../components/GenerateSection';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Interview({\n  ttsService\n}) {\n  _s();\n  const [interviewQuestions, setInterviewQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [answer, setAnswer] = useState('');\n  const [evaluation, setEvaluation] = useState('');\n  useEffect(() => {\n    fetchInterviewQuestions();\n  }, []);\n  const fetchInterviewQuestions = async () => {\n    try {\n      const response = await axios.get('http://localhost:8000/api/get-interview');\n      if (response.data && response.data.length > 0) {\n        setInterviewQuestions(response.data);\n        setCurrentQuestionIndex(0);\n      } else {\n        console.error('No interview questions received');\n      }\n    } catch (error) {\n      console.error('Error fetching interview questions:', error);\n    }\n  };\n  const handleQuestionSwitch = index => {\n    setCurrentQuestionIndex(index);\n    setAnswer(''); // 清空回答\n    setEvaluation(''); // 清空评价\n  };\n  const handleAnswerSubmit = submittedAnswer => {\n    setAnswer(submittedAnswer);\n    // 可以在这里调用生成评价的API\n  };\n  const currentQuestion = interviewQuestions[currentQuestionIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u6A21\\u62DF\\u9762\\u8BD5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), currentQuestion && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(QuestionDisplay, {\n        question: currentQuestion.question,\n        ttsService: ttsService\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(AnswerSection, {\n        onAnswerSubmit: handleAnswerSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), answer && /*#__PURE__*/_jsxDEV(GenerateSection, {\n        question: currentQuestion.question,\n        answer: answer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(Interview, \"rWfsyEh1VhQfKzq9d0ejv6r4iMQ=\");\n_c = Interview;\nexport default Interview;\nvar _c;\n$RefreshReg$(_c, \"Interview\");","map":{"version":3,"names":["React","useState","useEffect","axios","QuestionDisplay","AnswerSection","GenerateSection","jsxDEV","_jsxDEV","Interview","ttsService","_s","interviewQuestions","setInterviewQuestions","currentQuestionIndex","setCurrentQuestionIndex","answer","setAnswer","evaluation","setEvaluation","fetchInterviewQuestions","response","get","data","length","console","error","handleQuestionSwitch","index","handleAnswerSubmit","submittedAnswer","currentQuestion","children","fileName","_jsxFileName","lineNumber","columnNumber","question","onAnswerSubmit","_c","$RefreshReg$"],"sources":["/Users/zxh/0.Me/Mylearn/AIcoding/mywork/interview-assistant-react_stroop/frontend/src/pages/Interview.jsx"],"sourcesContent":["// frontend/src/pages/Interview.jsx\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport QuestionDisplay from '../components/QuestionDisplay';\nimport AnswerSection from '../components/AnswerSection';\nimport GenerateSection from '../components/GenerateSection';\n\nfunction Interview({ ttsService }) {\n  const [interviewQuestions, setInterviewQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [answer, setAnswer] = useState('');\n  const [evaluation, setEvaluation] = useState('');\n\n  useEffect(() => {\n    fetchInterviewQuestions();\n  }, []);\n\n  const fetchInterviewQuestions = async () => {\n    try {\n      const response = await axios.get('http://localhost:8000/api/get-interview');\n      if (response.data && response.data.length > 0) {\n        setInterviewQuestions(response.data);\n        setCurrentQuestionIndex(0);\n      } else {\n        console.error('No interview questions received');\n      }\n    } catch (error) {\n      console.error('Error fetching interview questions:', error);\n    }\n  };\n\n  const handleQuestionSwitch = (index) => {\n    setCurrentQuestionIndex(index);\n    setAnswer(''); // 清空回答\n    setEvaluation(''); // 清空评价\n  };\n\n\n  const handleAnswerSubmit = (submittedAnswer) => {\n    setAnswer(submittedAnswer);\n    // 可以在这里调用生成评价的API\n  };\n\n\n  const currentQuestion = interviewQuestions[currentQuestionIndex];\n\n\n  return (\n    <div>\n      <h1>模拟面试</h1>\n      {currentQuestion && (\n        <div>\n          <QuestionDisplay question={currentQuestion.question} ttsService={ttsService} />\n          <AnswerSection onAnswerSubmit={handleAnswerSubmit} />\n          {answer && <GenerateSection question={currentQuestion.question} answer={answer} />}\n          \n        </div>\n      )}\n    </div>\n  );\n}\n\n\nexport default Interview;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}