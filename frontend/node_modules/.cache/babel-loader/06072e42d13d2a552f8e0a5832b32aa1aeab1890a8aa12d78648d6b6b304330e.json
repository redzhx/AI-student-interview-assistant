{"ast":null,"code":"var _jsxFileName = \"/Users/zxh/0.Me/Mylearn/AIcoding/mywork/interview-assistant-react_stroop/frontend/src/pages/PracticePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport SidePanel from '../components/SidePanel';\nimport QuestionDisplay from '../components/QuestionDisplay';\nimport AnswerInput from '../components/AnswerInput';\nimport EvaluationDisplay from '../components/EvaluationDisplay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PracticePage() {\n  _s();\n  const [settings, setSettings] = useState({\n    source: 'real',\n    // Default settings\n    voiceApi: 'browser',\n    answerMode: 'text',\n    evaluationApi: 'zhipuai'\n  });\n  const [records, setRecords] = useState([]); // Stores user's answers and evaluations\n  const [currentQuestion, setCurrentQuestion] = useState('');\n  useEffect(() => {\n    const fetchQuestion = async () => {\n      try {\n        const response = await axios.get('/api/get-question');\n        setCurrentQuestion(response.data.question); // 假设后端返回的数据结构中包含 question 字段\n      } catch (error) {\n        console.error('Error fetching question:', error);\n      }\n    };\n    fetchQuestion();\n  }, []); // 空依赖数组确保仅在组件挂载时运行\n\n  const handleUpdateSettings = newSettings => {\n    setSettings(newSettings);\n  };\n  const handleAnswerSubmit = answer => {\n    // Submit answer to backend for evaluation\n    // Add response to records for display in EvaluationDisplay\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(SidePanel, {\n          onUpdateSettings: handleUpdateSettings\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 9,\n        children: [/*#__PURE__*/_jsxDEV(QuestionDisplay, {\n          mode: \"practice\",\n          voiceApi: settings.voiceApi\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AnswerInput, {\n          onAnswerSubmit: handleAnswerSubmit,\n          answerMode: settings.answerMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(EvaluationDisplay, {\n          records: records\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(PracticePage, \"MfSlTOCTKgOJBtFibC7ke84eJ4g=\");\n_c = PracticePage;\nexport default PracticePage;\nvar _c;\n$RefreshReg$(_c, \"PracticePage\");","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","SidePanel","QuestionDisplay","AnswerInput","EvaluationDisplay","jsxDEV","_jsxDEV","PracticePage","_s","settings","setSettings","source","voiceApi","answerMode","evaluationApi","records","setRecords","currentQuestion","setCurrentQuestion","fetchQuestion","response","axios","get","data","question","error","console","handleUpdateSettings","newSettings","handleAnswerSubmit","answer","children","md","onUpdateSettings","fileName","_jsxFileName","lineNumber","columnNumber","mode","onAnswerSubmit","_c","$RefreshReg$"],"sources":["/Users/zxh/0.Me/Mylearn/AIcoding/mywork/interview-assistant-react_stroop/frontend/src/pages/PracticePage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport SidePanel from '../components/SidePanel';\nimport QuestionDisplay from '../components/QuestionDisplay';\nimport AnswerInput from '../components/AnswerInput';\nimport EvaluationDisplay from '../components/EvaluationDisplay';\n\nfunction PracticePage() {\n  const [settings, setSettings] = useState({\n    source: 'real', // Default settings\n    voiceApi: 'browser',\n    answerMode: 'text',\n    evaluationApi: 'zhipuai'\n  });\n  const [records, setRecords] = useState([]); // Stores user's answers and evaluations\n  const [currentQuestion, setCurrentQuestion] = useState('');\n\n\n  useEffect(() => {\n    const fetchQuestion = async () => {\n      try {\n        const response = await axios.get('/api/get-question');\n        setCurrentQuestion(response.data.question); // 假设后端返回的数据结构中包含 question 字段\n      } catch (error) {\n        console.error('Error fetching question:', error);\n      }\n    };\n\n\n    fetchQuestion();\n  }, []); // 空依赖数组确保仅在组件挂载时运行\n\n  const handleUpdateSettings = (newSettings) => {\n    setSettings(newSettings);\n  };\n\n  const handleAnswerSubmit = (answer) => {\n    // Submit answer to backend for evaluation\n    // Add response to records for display in EvaluationDisplay\n  };\n\n  return (\n    <Container>\n      <Row>\n        <Col md={3}>\n          <SidePanel onUpdateSettings={handleUpdateSettings} />\n        </Col>\n        <Col md={9}>\n          <QuestionDisplay mode=\"practice\" voiceApi={settings.voiceApi} />\n          <AnswerInput onAnswerSubmit={handleAnswerSubmit} answerMode={settings.answerMode} />\n          <EvaluationDisplay records={records} />\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default PracticePage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}