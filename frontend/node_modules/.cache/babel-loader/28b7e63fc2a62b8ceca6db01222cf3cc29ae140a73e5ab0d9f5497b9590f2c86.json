{"ast":null,"code":"var _jsxFileName = \"/Users/zxh/0.Me/Mylearn/AIcoding/mywork/interview-assistant-react_stroop/frontend/src/components/AnswerSection.jsx\",\n  _s = $RefreshSig$();\n// AnswerSection.jsx\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Button } from 'react-bootstrap';\nimport axios from 'axios';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AnswerSection({\n  onAnswerSubmit,\n  disabled\n}) {\n  _s();\n  const [isRecording, setIsRecording] = useState(true);\n  const [inputText, setInputText] = useState('');\n  const [audioUrl, setAudioUrl] = useState(null);\n  const [transcript, setTranscript] = useState('');\n  const [countdown, setCountdown] = useState(20);\n  const [error, setError] = useState(null);\n  const mediaRecorderRef = useRef(null);\n  const countdownTimerRef = useRef(null);\n\n  // 切换回答模式\n  const toggleAnswerMode = () => {\n    setIsRecording(!isRecording);\n    if (!isRecording) {\n      onAnswerSubmit(inputText); // 如果切换到录音模式，提交文本答案\n    }\n  };\n\n  // 开始录音\n  const startRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      mediaRecorderRef.current = new MediaRecorder(stream);\n      const audioChunks = [];\n      mediaRecorderRef.current.ondataavailable = event => {\n        audioChunks.push(event.data);\n      };\n      mediaRecorderRef.current.onstop = async () => {\n        if (!audioChunks.length) {\n          setError('No audio data available.');\n          return;\n        }\n        const audioBlob = new Blob(audioChunks, {\n          type: 'audio/mpeg'\n        });\n        setAudioUrl(URL.createObjectURL(audioBlob));\n        uploadAudio(audioBlob);\n      };\n      mediaRecorderRef.current.start();\n      setIsRecording(true);\n      setCountdown(20);\n      countdownTimerRef.current = setInterval(() => {\n        setCountdown(prevCountdown => prevCountdown - 1);\n      }, 1000);\n    } catch (error) {\n      setError('Error accessing media devices');\n    }\n  };\n\n  // 停止录音\n  const stopRecording = () => {\n    if (mediaRecorderRef.current && isRecording) {\n      mediaRecorderRef.current.stop();\n      setIsRecording(false);\n      clearInterval(countdownTimerRef.current);\n    }\n  };\n\n  // 上传音频并获取转写\n  const uploadAudio = async audioBlob => {\n    const formData = new FormData();\n    formData.append(\"audioFile\", audioBlob, \"audio.mp3\");\n    try {\n      const response = await axios.post('http://localhost:8000/api/upload-audio', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setTranscript(response.data.transcript);\n      onAnswerSubmit(response.data.transcript);\n    } catch (error) {\n      console.error('Error uploading audio:', error);\n    }\n  };\n\n  // 当录音完成时，处理转录文本并提交答案\n  useEffect(() => {\n    if (transcript) {\n      onAnswerSubmit(transcript);\n    }\n  }, [transcript, onAnswerSubmit]);\n\n  // 清除倒计时\n  useEffect(() => {\n    return () => {\n      clearInterval(countdownTimerRef.current);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"answerarea\",\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      onClick: toggleAnswerMode,\n      disabled: disabled,\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: isRecording ? \"fa-solid fa-keyboard\" : \"fa-solid fa-microphone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), isRecording ? '切换到文本' : '切换到语音']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), isRecording ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"my-3\",\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          className: \"text-primary\",\n          children: [\"\\u9650\\u65F6\\u56DE\\u7B54 : \", countdown, \" \\u79D2\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }, this), isRecording ? /*#__PURE__*/_jsxDEV(Button, {\n        className: \"btn-danger my-1\",\n        onClick: stopRecording,\n        disabled: countdown === 0,\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"fa-regular fa-circle-stop fa-lg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 112\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        className: \"btn-danger my-1\",\n        onClick: startRecording,\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"fa-solid fa-microphone fa-lg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 86\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 25\n      }, this), transcript && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uD83D\\uDC81\\u200D\\u2642\\uFE0F: \", transcript]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 36\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 31\n      }, this), audioUrl && /*#__PURE__*/_jsxDEV(\"audio\", {\n        src: audioUrl,\n        controls: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"textarea-container my-3\",\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: inputText,\n        onChange: e => setInputText(e.target.value),\n        className: \"form-control\",\n        rows: \"4\",\n        placeholder: \"\\u8F93\\u5165\\u5185\\u5BB9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n}\n_s(AnswerSection, \"yMJUXDUFJq2gsxffOtlF9kIaEmw=\");\n_c = AnswerSection;\nexport default AnswerSection;\nvar _c;\n$RefreshReg$(_c, \"AnswerSection\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Button","axios","jsxDEV","_jsxDEV","AnswerSection","onAnswerSubmit","disabled","_s","isRecording","setIsRecording","inputText","setInputText","audioUrl","setAudioUrl","transcript","setTranscript","countdown","setCountdown","error","setError","mediaRecorderRef","countdownTimerRef","toggleAnswerMode","startRecording","stream","navigator","mediaDevices","getUserMedia","audio","current","MediaRecorder","audioChunks","ondataavailable","event","push","data","onstop","length","audioBlob","Blob","type","URL","createObjectURL","uploadAudio","start","setInterval","prevCountdown","stopRecording","stop","clearInterval","formData","FormData","append","response","post","headers","console","id","className","children","variant","onClick","fileName","_jsxFileName","lineNumber","columnNumber","class","src","controls","value","onChange","e","target","rows","placeholder","_c","$RefreshReg$"],"sources":["/Users/zxh/0.Me/Mylearn/AIcoding/mywork/interview-assistant-react_stroop/frontend/src/components/AnswerSection.jsx"],"sourcesContent":["// AnswerSection.jsx\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Button } from 'react-bootstrap';\nimport axios from 'axios';\nimport '../App.css';\n\nfunction AnswerSection({ onAnswerSubmit, disabled }) {\n    const [isRecording, setIsRecording] = useState(true);\n    const [inputText, setInputText] = useState('');\n    const [audioUrl, setAudioUrl] = useState(null);\n    const [transcript, setTranscript] = useState('');\n    const [countdown, setCountdown] = useState(20);\n    const [error, setError] = useState(null);\n    const mediaRecorderRef = useRef(null);\n    const countdownTimerRef = useRef(null);\n\n    // 切换回答模式\n    const toggleAnswerMode = () => {\n        setIsRecording(!isRecording);\n        if (!isRecording) {\n            onAnswerSubmit(inputText); // 如果切换到录音模式，提交文本答案\n        }\n    };\n\n    // 开始录音\n    const startRecording = async () => {\n        try {\n            const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n            mediaRecorderRef.current = new MediaRecorder(stream);\n            const audioChunks = [];\n\n            mediaRecorderRef.current.ondataavailable = event => {\n                audioChunks.push(event.data);\n            };\n\n            mediaRecorderRef.current.onstop = async () => {\n                if (!audioChunks.length) {\n                    setError('No audio data available.');\n                    return;\n                }\n                const audioBlob = new Blob(audioChunks, { type: 'audio/mpeg' });\n                setAudioUrl(URL.createObjectURL(audioBlob));\n                uploadAudio(audioBlob);\n            };\n\n            mediaRecorderRef.current.start();\n            setIsRecording(true);\n            setCountdown(20);\n            countdownTimerRef.current = setInterval(() => {\n                setCountdown(prevCountdown => prevCountdown - 1);\n            }, 1000);\n        } catch (error) {\n            setError('Error accessing media devices');\n        }\n    };\n\n    // 停止录音\n    const stopRecording = () => {\n        if (mediaRecorderRef.current && isRecording) {\n            mediaRecorderRef.current.stop();\n            setIsRecording(false);\n            clearInterval(countdownTimerRef.current);\n        }\n    };\n\n    // 上传音频并获取转写\n    const uploadAudio = async (audioBlob) => {\n        const formData = new FormData();\n        formData.append(\"audioFile\", audioBlob, \"audio.mp3\");\n\n        try {\n            const response = await axios.post('http://localhost:8000/api/upload-audio', formData, {\n                headers: {\n                    'Content-Type': 'multipart/form-data',\n                },\n            });\n            setTranscript(response.data.transcript);\n            onAnswerSubmit(response.data.transcript);\n        } catch (error) {\n            console.error('Error uploading audio:', error);\n        }\n    };\n\n    // 当录音完成时，处理转录文本并提交答案\n    useEffect(() => {\n        if (transcript) {\n            onAnswerSubmit(transcript);\n        }\n    }, [transcript, onAnswerSubmit]);\n\n    // 清除倒计时\n    useEffect(() => {\n        return () => {\n            clearInterval(countdownTimerRef.current);\n        };\n    }, []);\n\n    return (\n        <div id=\"answerarea\" className=\"container mt-4\">\n            <Button variant=\"primary\" onClick={toggleAnswerMode} disabled={disabled}>\n                <i className={isRecording ? \"fa-solid fa-keyboard\" : \"fa-solid fa-microphone\"}></i>\n                {isRecording ? '切换到文本' : '切换到语音'}\n            </Button>\n            {isRecording ? (\n                <div>\n                    <div className=\"my-3\">\n                        <strong className=\"text-primary\">限时回答 : {countdown} 秒</strong>\n                    </div>\n                    {isRecording ? (\n                        <Button className=\"btn-danger my-1\" onClick={stopRecording} disabled={countdown === 0}><i class=\"fa-regular fa-circle-stop fa-lg\"></i></Button>\n                    ) : (\n                        <Button className=\"btn-danger my-1\" onClick={startRecording}><i class=\"fa-solid fa-microphone fa-lg\"></i></Button>\n                    )}\n                    {transcript && <p>💁‍♂️: {transcript}</p>}\n                    {error && <p>Error: {error}</p>}\n                    {audioUrl && <audio src={audioUrl} controls />}\n                </div>\n            ) : (\n                <div className=\"textarea-container my-3\">\n                    <textarea\n                        value={inputText}\n                        onChange={e => setInputText(e.target.value)}\n                        className=\"form-control\"\n                        rows=\"4\"\n                        placeholder=\"输入内容\"\n                    />\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default AnswerSection;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}