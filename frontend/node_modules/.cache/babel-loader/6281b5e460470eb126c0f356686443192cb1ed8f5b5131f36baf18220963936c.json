{"ast":null,"code":"var _jsxFileName = \"/Users/zxh/0.Me/Mylearn/AIcoding/mywork/interview-assistant-react_stroop/frontend/src/components/AnswerSection.jsx\",\n  _s = $RefreshSig$();\n// AnswerSection.jsx\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Button } from 'react-bootstrap';\nimport axios from 'axios';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AnswerSection({\n  onAnswerSubmit,\n  disabled\n}) {\n  _s();\n  const [isRecording, setIsRecording] = useState(false);\n  const [isRecordingMode, setIsRecordingMode] = useState(true); // 默认进入录音模式\n\n  const [inputText, setInputText] = useState('');\n  const [audioUrl, setAudioUrl] = useState(null);\n  const [transcript, setTranscript] = useState('');\n  const [countdown, setCountdown] = useState(20);\n  const [error, setError] = useState(null);\n  const mediaRecorderRef = useRef(null);\n  const countdownTimerRef = useRef(null);\n  const [activeSubmissionMode, setActiveSubmissionMode] = useState('audio'); // 新增状态跟踪提交模式\n\n  // 切换回答模式\n  // const toggleAnswerMode = () => {\n  //     setIsRecording(!isRecording);\n  //     if (!isRecording) {\n  //         onAnswerSubmit(inputText); // 如果切换到录音模式，提交文本答案\n  //     }\n  // };\n\n  // 切换答题模式\n  const toggleAnswerMode = () => {\n    setIsRecordingMode(!isRecordingMode);\n    setActiveSubmissionMode(isRecordingMode ? 'text' : 'audio'); // 切换提交模式\n  };\n  // 开始录音\n  const startRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      mediaRecorderRef.current = new MediaRecorder(stream);\n      const audioChunks = [];\n      mediaRecorderRef.current.ondataavailable = event => {\n        audioChunks.push(event.data);\n      };\n      mediaRecorderRef.current.onstop = async () => {\n        if (!audioChunks.length) {\n          setError('No audio data available.');\n          return;\n        }\n        const audioBlob = new Blob(audioChunks, {\n          type: 'audio/mpeg'\n        });\n        setAudioUrl(URL.createObjectURL(audioBlob));\n        uploadAudio(audioBlob);\n      };\n      mediaRecorderRef.current.start();\n      setIsRecording(true);\n      setCountdown(20);\n      countdownTimerRef.current = setInterval(() => {\n        setCountdown(prevCountdown => prevCountdown - 1);\n      }, 1000);\n    } catch (error) {\n      setError('Error accessing media devices');\n    }\n  };\n\n  // 停止录音\n  const stopRecording = () => {\n    if (mediaRecorderRef.current && isRecording) {\n      mediaRecorderRef.current.stop();\n      setIsRecording(false);\n      clearInterval(countdownTimerRef.current);\n    }\n  };\n  // 倒计时结束停止录音\n  useEffect(() => {\n    if (countdown === 0 && isRecording) {\n      stopRecording();\n    }\n  }, [countdown, isRecording]);\n\n  // 清除倒计时\n  useEffect(() => {\n    return () => {\n      clearInterval(countdownTimerRef.current);\n    };\n  }, []);\n\n  // 上传音频并获取转写\n  const uploadAudio = async audioBlob => {\n    const formData = new FormData();\n    formData.append(\"audioFile\", audioBlob, \"audio.mp3\");\n    try {\n      const response = await axios.post('http://localhost:8000/api/upload-audio', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setTranscript(response.data.transcript);\n      setAudioUrl(URL.createObjectURL(audioBlob)); // 设置录音文件的 URL\n      onAnswerSubmit(response.data.transcript);\n    } catch (error) {\n      console.error('Error uploading audio:', error);\n    }\n  };\n\n  // 当录音完成时，处理转录文本并提交答案\n  useEffect(() => {\n    if (transcript) {\n      onAnswerSubmit(transcript);\n    }\n  }, [transcript, onAnswerSubmit]);\n\n  // 文本输入区域的更改处理\n  const handleTextInputChange = e => {\n    setInputText(e.target.value);\n  };\n\n  // 提交答案\n  const handleSubmitAnswer = () => {\n    if (activeSubmissionMode === 'text') {\n      if (inputText.trim() === '') {\n        alert(\"请输入文本内容后再提交！\");\n        return;\n      }\n      onAnswerSubmit(inputText);\n    }\n  };\n\n  // const handleAudioTranscriptReady = (transcript, audioUrl) => {\n  //     //   setIsRecording(false); // 停止录音\n  //       setTranscript(transcript); // 设置转写文本\n  //       setAudioUrl(audioUrl); // 设置录音文件的 URL\n  //       onAnswerSubmit(transcript); // 提交答案进行评价\n  //   };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [isRecordingMode ?\n    /*#__PURE__*/\n    // 在录音模式下，根据是否正在录音显示不同的按钮\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"my-3\",\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          className: \"text-primary\",\n          children: [\"\\u8BED\\u97F3\\u9650\\u65F6 : \", countdown, \" \\u79D2\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [transcript && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: transcript\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 36\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-danger\",\n          children: [\"Error: \", error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 31\n        }, this), audioUrl && /*#__PURE__*/_jsxDEV(\"audio\", {\n          src: audioUrl,\n          controls: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: `btn-${isRecording ? 'dark' : 'danger'} my-1`,\n        onClick: isRecording ? stopRecording : startRecording,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: `fa-${isRecording ? 'regular fa-circle-stop' : 'solid fa-microphone'} fa-lg`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 25\n        }, this), \" \", isRecording ? '停止' : '开始']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }, this) :\n    /*#__PURE__*/\n    // 在文本模式下，显示文本输入区域\n    _jsxDEV(\"div\", {\n      className: \"textarea-container my-3\",\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: inputText,\n        onChange: e => {\n          setInputText(e.target.value);\n          onAnswerSubmit(e.target.value); // 更新父组件中的答案状态\n        },\n        className: \"form-control\",\n        rows: \"4\",\n        placeholder: \"\\u8F93\\u5165\\u5185\\u5BB9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      onClick: toggleAnswerMode,\n      disabled: disabled,\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: isRecordingMode ? \"fa-solid fa-keyboard\" : \"fa-solid fa-microphone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this), isRecordingMode ? ' 键盘' : '  返回']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 9\n  }, this);\n}\n_s(AnswerSection, \"jnxxnvgsIxsWBcD88vWXm/nW6gM=\");\n_c = AnswerSection;\nexport default AnswerSection;\nvar _c;\n$RefreshReg$(_c, \"AnswerSection\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Button","axios","jsxDEV","_jsxDEV","AnswerSection","onAnswerSubmit","disabled","_s","isRecording","setIsRecording","isRecordingMode","setIsRecordingMode","inputText","setInputText","audioUrl","setAudioUrl","transcript","setTranscript","countdown","setCountdown","error","setError","mediaRecorderRef","countdownTimerRef","activeSubmissionMode","setActiveSubmissionMode","toggleAnswerMode","startRecording","stream","navigator","mediaDevices","getUserMedia","audio","current","MediaRecorder","audioChunks","ondataavailable","event","push","data","onstop","length","audioBlob","Blob","type","URL","createObjectURL","uploadAudio","start","setInterval","prevCountdown","stopRecording","stop","clearInterval","formData","FormData","append","response","post","headers","console","handleTextInputChange","e","target","value","handleSubmitAnswer","trim","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","controls","onClick","onChange","rows","placeholder","variant","_c","$RefreshReg$"],"sources":["/Users/zxh/0.Me/Mylearn/AIcoding/mywork/interview-assistant-react_stroop/frontend/src/components/AnswerSection.jsx"],"sourcesContent":["// AnswerSection.jsx\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Button } from 'react-bootstrap';\nimport axios from 'axios';\nimport '../App.css';\n\nfunction AnswerSection({ onAnswerSubmit, disabled }) {\n    const [isRecording, setIsRecording] = useState(false);\n    const [isRecordingMode, setIsRecordingMode] = useState(true); // 默认进入录音模式\n\n    const [inputText, setInputText] = useState('');\n    const [audioUrl,setAudioUrl ] = useState(null);\n    const [transcript, setTranscript] = useState('');\n    const [countdown, setCountdown] = useState(20);\n    const [error, setError] = useState(null);\n    const mediaRecorderRef = useRef(null);\n    const countdownTimerRef = useRef(null);\n    const [activeSubmissionMode, setActiveSubmissionMode] = useState('audio'); // 新增状态跟踪提交模式\n\n    // 切换回答模式\n    // const toggleAnswerMode = () => {\n    //     setIsRecording(!isRecording);\n    //     if (!isRecording) {\n    //         onAnswerSubmit(inputText); // 如果切换到录音模式，提交文本答案\n    //     }\n    // };\n\n\n\n    // 切换答题模式\n    const toggleAnswerMode = () => {\n        setIsRecordingMode(!isRecordingMode);\n        setActiveSubmissionMode(isRecordingMode ? 'text' : 'audio'); // 切换提交模式\n\n    };\n    // 开始录音\n    const startRecording = async () => {\n        try {\n            const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n            mediaRecorderRef.current = new MediaRecorder(stream);\n            const audioChunks = [];\n\n            mediaRecorderRef.current.ondataavailable = event => {\n                audioChunks.push(event.data);\n            };\n\n            mediaRecorderRef.current.onstop = async () => {\n                if (!audioChunks.length) {\n                    setError('No audio data available.');\n                    return;\n                }\n                const audioBlob = new Blob(audioChunks, { type: 'audio/mpeg' });\n                setAudioUrl(URL.createObjectURL(audioBlob));\n                uploadAudio(audioBlob);\n            };\n\n            mediaRecorderRef.current.start();\n            setIsRecording(true);\n            setCountdown(20);\n            countdownTimerRef.current = setInterval(() => {\n                setCountdown(prevCountdown => prevCountdown - 1);\n            }, 1000);\n        } catch (error) {\n            setError('Error accessing media devices');\n        }\n    };\n\n    // 停止录音\n    const stopRecording = () => {\n        if (mediaRecorderRef.current && isRecording) {\n            mediaRecorderRef.current.stop();\n            setIsRecording(false);\n            clearInterval(countdownTimerRef.current);\n        }\n    };\n    // 倒计时结束停止录音\n    useEffect(() => {\n        if (countdown === 0 && isRecording) {\n            stopRecording();\n        }\n    }, [countdown, isRecording]);\n\n    // 清除倒计时\n    useEffect(() => {\n        return () => {\n            clearInterval(countdownTimerRef.current);\n        };\n    }, []);\n\n    // 上传音频并获取转写\n    const uploadAudio = async (audioBlob) => {\n        const formData = new FormData();\n        formData.append(\"audioFile\", audioBlob, \"audio.mp3\");\n\n        try {\n            const response = await axios.post('http://localhost:8000/api/upload-audio', formData, {\n                headers: {\n                    'Content-Type': 'multipart/form-data',\n                },\n            });\n            setTranscript(response.data.transcript);\n            setAudioUrl(URL.createObjectURL(audioBlob)); // 设置录音文件的 URL\n            onAnswerSubmit(response.data.transcript);\n        } catch (error) {\n            console.error('Error uploading audio:', error);\n        }\n    };\n\n    // 当录音完成时，处理转录文本并提交答案\n    useEffect(() => {\n        if (transcript) {\n            onAnswerSubmit(transcript);\n        }\n    }, [transcript, onAnswerSubmit]);\n\n\n\n// 文本输入区域的更改处理\nconst handleTextInputChange = (e) => {\n    setInputText(e.target.value);\n};\n\n// 提交答案\nconst handleSubmitAnswer = () => {\n    if (activeSubmissionMode === 'text') {\n        if (inputText.trim() === '') {\n            alert(\"请输入文本内容后再提交！\");\n            return;\n        }\n        onAnswerSubmit(inputText);\n    }\n};\n\n    // const handleAudioTranscriptReady = (transcript, audioUrl) => {\n    //     //   setIsRecording(false); // 停止录音\n    //       setTranscript(transcript); // 设置转写文本\n    //       setAudioUrl(audioUrl); // 设置录音文件的 URL\n    //       onAnswerSubmit(transcript); // 提交答案进行评价\n    //   };\n\n    return (\n        <div className=\"container mt-4\">\n            \n            {isRecordingMode ? (\n                // 在录音模式下，根据是否正在录音显示不同的按钮\n                <div>\n                     <div className=\"my-3\">\n                        <strong className=\"text-primary\">语音限时 : {countdown} 秒</strong>\n                    </div>\n                    <div>\n                    {transcript && <p>{transcript}</p>}\n                    {error && <p className=\"text-danger\">Error: {error}</p>}\n                    {audioUrl && <audio src={audioUrl} controls />}\n                    </div>\n                    <Button className={`btn-${isRecording ? 'dark' : 'danger'} my-1`} onClick={isRecording ? stopRecording : startRecording}>\n                        <i className={`fa-${isRecording ? 'regular fa-circle-stop' : 'solid fa-microphone'} fa-lg`}></i> {isRecording ? '停止' : '开始'}\n                    </Button>\n                   \n                </div>\n            ) : (\n                // 在文本模式下，显示文本输入区域\n                <div className=\"textarea-container my-3\">\n                    <textarea\n                        value={inputText}\n                        onChange={e => {\n                            setInputText(e.target.value);\n                            onAnswerSubmit(e.target.value); // 更新父组件中的答案状态\n                        }}\n                        className=\"form-control\"\n                        rows=\"4\"\n                        placeholder=\"输入内容\"\n                    />\n                </div>\n            )}\n            <Button variant=\"primary\" onClick={toggleAnswerMode} disabled={disabled}>\n                <i className={isRecordingMode ? \"fa-solid fa-keyboard\" : \"fa-solid fa-microphone\"}></i>\n                {isRecordingMode ? ' 键盘' : '  返回'}\n            </Button>\n        </div>\n       \n    );\n}\n\nexport default AnswerSection;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}