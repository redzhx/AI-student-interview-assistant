{"ast":null,"code":"var _jsxFileName = \"/Users/zxh/0.Me/Mylearn/AIcoding/mywork/interview-assistant-react_stroop/frontend/src/components/AudioRecorder.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AudioRecorder({\n  onTranscriptReady\n}) {\n  _s();\n  const [isRecording, setIsRecording] = useState(false);\n  const [countdown, setCountdown] = useState(20); // 设定录音时长\n  const mediaRecorderRef = useRef(null);\n  useEffect(() => {\n    // 倒计时逻辑\n    if (countdown === 0 && isRecording) {\n      stopRecording();\n    }\n    return () => clearInterval(mediaRecorderRef.current);\n  }, [countdown, isRecording]);\n  const startRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      mediaRecorderRef.current = new MediaRecorder(stream);\n      const audioChunks = [];\n      mediaRecorderRef.current.ondataavailable = event => {\n        audioChunks.push(event.data);\n      };\n      mediaRecorderRef.current.onstop = async () => {\n        if (!audioChunks.length) {\n          setError('No audio data available.');\n          return;\n        }\n        const audioBlob = new Blob(audioChunks, {\n          type: 'audio/mpeg'\n        });\n        setAudioUrl(URL.createObjectURL(audioBlob));\n        uploadAudio(audioBlob);\n      };\n      mediaRecorderRef.current.start();\n      setIsRecording(true);\n      setCountdown(20); // 重置倒计时\n      countdownTimerRef.current = setInterval(() => {\n        setCountdown(prevCountdown => prevCountdown - 1);\n      }, 1000);\n    } catch (error) {\n      setError('Error accessing media devices');\n    }\n  };\n  const stopRecording = () => {\n    if (mediaRecorderRef.current && isRecording) {\n      mediaRecorderRef.current.stop();\n      setIsRecording(false);\n      clearInterval(countdownTimerRef.current);\n    }\n  };\n  const uploadAudio = async audioBlob => {\n    const formData = new FormData();\n    formData.append(\"audioFile\", audioBlob, \"audio.mp3\");\n    try {\n      const response = await axios.post('http://localhost:8000/api/upload-audio', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setTranscript(response.data.transcript);\n      onTranscriptReady(response.data.transcript);\n    } catch (error) {\n      console.error('Error uploading audio:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [isRecording ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopRecording,\n        disabled: countdown === 0,\n        children: \"\\u505C\\u6B62\\u5F55\\u97F3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u5269\\u4F59\\u65F6\\u95F4: \", countdown, \" \\u79D2\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startRecording,\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        class: \"fa-solid fa-microphone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 50\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }, this), audioUrl && /*#__PURE__*/_jsxDEV(\"audio\", {\n      src: audioUrl,\n      controls: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 26\n    }, this), transcript && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u8F6C\\u5199\\u6587\\u672C: \", transcript]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 28\n    }, this), \"        \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n}\n_s(AudioRecorder, \"ChNc66qIhSHcv5SODechCEeD6Ns=\");\n_c = AudioRecorder;\nexport default AudioRecorder;\nvar _c;\n$RefreshReg$(_c, \"AudioRecorder\");","map":{"version":3,"names":["React","useState","useRef","useEffect","axios","jsxDEV","_jsxDEV","AudioRecorder","onTranscriptReady","_s","isRecording","setIsRecording","countdown","setCountdown","mediaRecorderRef","stopRecording","clearInterval","current","startRecording","stream","navigator","mediaDevices","getUserMedia","audio","MediaRecorder","audioChunks","ondataavailable","event","push","data","onstop","length","setError","audioBlob","Blob","type","setAudioUrl","URL","createObjectURL","uploadAudio","start","countdownTimerRef","setInterval","prevCountdown","error","stop","formData","FormData","append","response","post","headers","setTranscript","transcript","console","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","class","audioUrl","src","controls","_c","$RefreshReg$"],"sources":["/Users/zxh/0.Me/Mylearn/AIcoding/mywork/interview-assistant-react_stroop/frontend/src/components/AudioRecorder.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction AudioRecorder({ onTranscriptReady }) {\n    const [isRecording, setIsRecording] = useState(false);\n    const [countdown, setCountdown] = useState(20); // 设定录音时长\n    const mediaRecorderRef = useRef(null);\n\n    useEffect(() => {\n        // 倒计时逻辑\n        if (countdown === 0 && isRecording) {\n            stopRecording();\n        }\n        return () => clearInterval(mediaRecorderRef.current);\n    }, [countdown, isRecording]);\n\n    const startRecording = async () => {\n        try {\n            const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n            mediaRecorderRef.current = new MediaRecorder(stream);\n            const audioChunks = [];\n\n            mediaRecorderRef.current.ondataavailable = event => {\n                audioChunks.push(event.data);\n            };\n\n            mediaRecorderRef.current.onstop = async () => {\n                if (!audioChunks.length) {\n                    setError('No audio data available.');\n                    return;\n                }\n                const audioBlob = new Blob(audioChunks, { type: 'audio/mpeg' });\n                setAudioUrl(URL.createObjectURL(audioBlob));\n                uploadAudio(audioBlob);\n            };\n\n            mediaRecorderRef.current.start();\n            setIsRecording(true);\n            setCountdown(20); // 重置倒计时\n            countdownTimerRef.current = setInterval(() => {\n                setCountdown(prevCountdown => prevCountdown - 1);\n            }, 1000);\n        } catch (error) {\n            setError('Error accessing media devices');\n        }\n    };\n\n    const stopRecording = () => {\n        if (mediaRecorderRef.current && isRecording) {\n            mediaRecorderRef.current.stop();\n            setIsRecording(false);\n            clearInterval(countdownTimerRef.current);\n        }\n    };\n\n    const uploadAudio = async (audioBlob) => {\n        const formData = new FormData();\n        formData.append(\"audioFile\", audioBlob, \"audio.mp3\");\n\n        try {\n            const response = await axios.post('http://localhost:8000/api/upload-audio', formData, {\n                headers: {\n                    'Content-Type': 'multipart/form-data',\n                },\n            });\n            setTranscript(response.data.transcript);\n            onTranscriptReady(response.data.transcript);\n        } catch (error) {\n            console.error('Error uploading audio:', error);\n        }\n    };\n\n\n    return (\n        <div>\n            {isRecording ? (\n                <div>\n                    <button onClick={stopRecording} disabled={countdown === 0}>停止录音</button>\n                    <p>剩余时间: {countdown} 秒</p>\n                </div>\n            ) : (\n                <button onClick={startRecording}><i class=\"fa-solid fa-microphone\"></i></button>\n            )}\n\n            {audioUrl && <audio src={audioUrl} controls />}\n            {transcript && <p>转写文本: {transcript}</p>}        </div>\n    );\n}\n\nexport default AudioRecorder;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,aAAaA,CAAC;EAAEC;AAAkB,CAAC,EAAE;EAAAC,EAAA;EAC1C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAChD,MAAMa,gBAAgB,GAAGZ,MAAM,CAAC,IAAI,CAAC;EAErCC,SAAS,CAAC,MAAM;IACZ;IACA,IAAIS,SAAS,KAAK,CAAC,IAAIF,WAAW,EAAE;MAChCK,aAAa,CAAC,CAAC;IACnB;IACA,OAAO,MAAMC,aAAa,CAACF,gBAAgB,CAACG,OAAO,CAAC;EACxD,CAAC,EAAE,CAACL,SAAS,EAAEF,WAAW,CAAC,CAAC;EAE5B,MAAMQ,cAAc,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACA,MAAMC,MAAM,GAAG,MAAMC,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;QAAEC,KAAK,EAAE;MAAK,CAAC,CAAC;MACzET,gBAAgB,CAACG,OAAO,GAAG,IAAIO,aAAa,CAACL,MAAM,CAAC;MACpD,MAAMM,WAAW,GAAG,EAAE;MAEtBX,gBAAgB,CAACG,OAAO,CAACS,eAAe,GAAGC,KAAK,IAAI;QAChDF,WAAW,CAACG,IAAI,CAACD,KAAK,CAACE,IAAI,CAAC;MAChC,CAAC;MAEDf,gBAAgB,CAACG,OAAO,CAACa,MAAM,GAAG,YAAY;QAC1C,IAAI,CAACL,WAAW,CAACM,MAAM,EAAE;UACrBC,QAAQ,CAAC,0BAA0B,CAAC;UACpC;QACJ;QACA,MAAMC,SAAS,GAAG,IAAIC,IAAI,CAACT,WAAW,EAAE;UAAEU,IAAI,EAAE;QAAa,CAAC,CAAC;QAC/DC,WAAW,CAACC,GAAG,CAACC,eAAe,CAACL,SAAS,CAAC,CAAC;QAC3CM,WAAW,CAACN,SAAS,CAAC;MAC1B,CAAC;MAEDnB,gBAAgB,CAACG,OAAO,CAACuB,KAAK,CAAC,CAAC;MAChC7B,cAAc,CAAC,IAAI,CAAC;MACpBE,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC;MAClB4B,iBAAiB,CAACxB,OAAO,GAAGyB,WAAW,CAAC,MAAM;QAC1C7B,YAAY,CAAC8B,aAAa,IAAIA,aAAa,GAAG,CAAC,CAAC;MACpD,CAAC,EAAE,IAAI,CAAC;IACZ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZZ,QAAQ,CAAC,+BAA+B,CAAC;IAC7C;EACJ,CAAC;EAED,MAAMjB,aAAa,GAAGA,CAAA,KAAM;IACxB,IAAID,gBAAgB,CAACG,OAAO,IAAIP,WAAW,EAAE;MACzCI,gBAAgB,CAACG,OAAO,CAAC4B,IAAI,CAAC,CAAC;MAC/BlC,cAAc,CAAC,KAAK,CAAC;MACrBK,aAAa,CAACyB,iBAAiB,CAACxB,OAAO,CAAC;IAC5C;EACJ,CAAC;EAED,MAAMsB,WAAW,GAAG,MAAON,SAAS,IAAK;IACrC,MAAMa,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,WAAW,EAAEf,SAAS,EAAE,WAAW,CAAC;IAEpD,IAAI;MACA,MAAMgB,QAAQ,GAAG,MAAM7C,KAAK,CAAC8C,IAAI,CAAC,wCAAwC,EAAEJ,QAAQ,EAAE;QAClFK,OAAO,EAAE;UACL,cAAc,EAAE;QACpB;MACJ,CAAC,CAAC;MACFC,aAAa,CAACH,QAAQ,CAACpB,IAAI,CAACwB,UAAU,CAAC;MACvC7C,iBAAiB,CAACyC,QAAQ,CAACpB,IAAI,CAACwB,UAAU,CAAC;IAC/C,CAAC,CAAC,OAAOT,KAAK,EAAE;MACZU,OAAO,CAACV,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAClD;EACJ,CAAC;EAGD,oBACItC,OAAA;IAAAiD,QAAA,GACK7C,WAAW,gBACRJ,OAAA;MAAAiD,QAAA,gBACIjD,OAAA;QAAQkD,OAAO,EAAEzC,aAAc;QAAC0C,QAAQ,EAAE7C,SAAS,KAAK,CAAE;QAAA2C,QAAA,EAAC;MAAI;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACxEvD,OAAA;QAAAiD,QAAA,GAAG,4BAAM,EAAC3C,SAAS,EAAC,SAAE;MAAA;QAAA8C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,gBAENvD,OAAA;MAAQkD,OAAO,EAAEtC,cAAe;MAAAqC,QAAA,eAACjD,OAAA;QAAGwD,KAAK,EAAC;MAAwB;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAClF,EAEAE,QAAQ,iBAAIzD,OAAA;MAAO0D,GAAG,EAAED,QAAS;MAACE,QAAQ;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC7CR,UAAU,iBAAI/C,OAAA;MAAAiD,QAAA,GAAG,4BAAM,EAACF,UAAU;IAAA;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAAC,UAAQ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEnE;AAACpD,EAAA,CApFQF,aAAa;AAAA2D,EAAA,GAAb3D,aAAa;AAsFtB,eAAeA,aAAa;AAAC,IAAA2D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}