{"ast":null,"code":"var _jsxFileName = \"/Users/zxh/0.Me/Mylearn/AIcoding/mywork/interview-assistant-react_stroop/frontend/src/components/AnswerSection.jsx\",\n  _s = $RefreshSig$();\n// Answersection.jsx\nimport React, { useState, useEffect } from 'react';\nimport AudioRecorder from './AudioRecorder';\nimport TextInput from './TextInput';\nimport { Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AnswerSection({\n  onAnswerSubmit,\n  setAudioUrl,\n  resetTextInput\n}) {\n  _s();\n  const [transcript, setTranscript] = useState('');\n  // const [audioUrl, setAudioUrl] = useState('');\n  const [isRecording, setIsRecording] = useState(false);\n  const [showTextInput, setShowTextInput] = useState(false);\n  const handleAudioTranscriptReady = (transcriptText, audioUrlData) => {\n    setIsRecording(false);\n    //   setTranscript(transcriptText);\n    setAudioUrl(audioUrlData); // 更新父组件的 audioUrl 状态\n    onAnswerSubmit(transcriptText);\n  };\n  const toggleRecording = () => {\n    setIsRecording(!isRecording);\n    setShowTextInput(false);\n  };\n  const switchToTextInput = () => {\n    setIsRecording(false);\n    setShowTextInput(true);\n  };\n  const handleResetTextInput = () => {\n    if (resetTextInput) {\n      resetTextInput(); // 调用从父组件传入的重置函数\n    }\n  };\n\n  // 当切换问题时，调用重置函数\n  useEffect(() => {\n    handleResetTextInput();\n  }, [currentQuestion]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: isRecording ? \"warning\" : \"danger\",\n      onClick: toggleRecording,\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: `fa-solid ${isRecording ? \"fa-square\" : \"fa-microphone\"}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), isRecording ? \" 停止录音\" : \" 语音回答\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      onClick: switchToTextInput,\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa-solid fa-keyboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 67\n      }, this), \" \\u6587\\u672C\\u56DE\\u7B54\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), isRecording && /*#__PURE__*/_jsxDEV(AudioRecorder, {\n      onTranscriptReady: handleAudioTranscriptReady,\n      autoStart: isRecording\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 29\n    }, this), showTextInput && /*#__PURE__*/_jsxDEV(TextInput, {\n      onTextSubmit: onAnswerSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_s(AnswerSection, \"rcfdEBfXc8cAWRu5ppdA7v+I5Vo=\");\n_c = AnswerSection;\nexport default AnswerSection;\nvar _c;\n$RefreshReg$(_c, \"AnswerSection\");","map":{"version":3,"names":["React","useState","useEffect","AudioRecorder","TextInput","Button","jsxDEV","_jsxDEV","AnswerSection","onAnswerSubmit","setAudioUrl","resetTextInput","_s","transcript","setTranscript","isRecording","setIsRecording","showTextInput","setShowTextInput","handleAudioTranscriptReady","transcriptText","audioUrlData","toggleRecording","switchToTextInput","handleResetTextInput","currentQuestion","className","children","variant","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onTranscriptReady","autoStart","onTextSubmit","_c","$RefreshReg$"],"sources":["/Users/zxh/0.Me/Mylearn/AIcoding/mywork/interview-assistant-react_stroop/frontend/src/components/AnswerSection.jsx"],"sourcesContent":["// Answersection.jsx\nimport React, { useState, useEffect } from 'react';\nimport AudioRecorder from './AudioRecorder';\nimport TextInput from './TextInput';\nimport { Button } from 'react-bootstrap';\n\nfunction AnswerSection({ onAnswerSubmit, setAudioUrl, resetTextInput }) {\n    const [transcript, setTranscript] = useState('');\n    // const [audioUrl, setAudioUrl] = useState('');\n    const [isRecording, setIsRecording] = useState(false);\n    const [showTextInput, setShowTextInput] = useState(false);\n\n    const handleAudioTranscriptReady = (transcriptText, audioUrlData) => {\n      setIsRecording(false);\n    //   setTranscript(transcriptText);\n      setAudioUrl(audioUrlData); // 更新父组件的 audioUrl 状态\n      onAnswerSubmit(transcriptText);\n  };\n\n  const toggleRecording = () => {\n    setIsRecording(!isRecording);\n    setShowTextInput(false);\n};\n\nconst switchToTextInput = () => {\n  setIsRecording(false);\n  setShowTextInput(true);\n};\n\nconst handleResetTextInput = () => {\n    if (resetTextInput) {\n        resetTextInput(); // 调用从父组件传入的重置函数\n    }\n};\n\n    // 当切换问题时，调用重置函数\n    useEffect(() => {\n        handleResetTextInput();\n    }, [currentQuestion]);\n\n    return (\n        <div className=\"container mt-4\">\n            <Button variant={isRecording ? \"warning\" : \"danger\"} onClick={toggleRecording}>\n                <i className={`fa-solid ${isRecording ? \"fa-square\" : \"fa-microphone\"}`}></i>\n                {isRecording ? \" 停止录音\" : \" 语音回答\"}\n            </Button>\n            <Button variant=\"primary\" onClick={switchToTextInput}><i className=\"fa-solid fa-keyboard\"></i> 文本回答</Button>\n            {isRecording && <AudioRecorder onTranscriptReady={handleAudioTranscriptReady} autoStart={isRecording} />}\n            {showTextInput && <TextInput onTextSubmit={onAnswerSubmit} />}\n            {/* {audioUrl && <audio src={audioUrl} controls />} */}\n            {/* {transcript && <p>{transcript}</p>} */}\n        </div>\n    );\n}\n\nexport default AnswerSection;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}