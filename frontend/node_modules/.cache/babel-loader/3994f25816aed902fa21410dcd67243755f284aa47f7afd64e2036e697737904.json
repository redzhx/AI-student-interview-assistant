{"ast":null,"code":"var _jsxFileName = \"/Users/zxh/0.Me/Mylearn/AIcoding/mywork/interview-assistant-react_stroop/frontend/src/components/GenerateSection.jsx\",\n  _s = $RefreshSig$();\n// GenerateSection.jsx\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GenerateSection({\n  question,\n  answer,\n  onEvaluationGenerated,\n  evaluationService,\n  disabled\n}) {\n  _s();\n  const [aiChoice, setAiChoice] = useState('zhipuai');\n  const [evaluation, setEvaluation] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const saveRecord = async (questionText, answerText, evaluationText) => {\n    try {\n      await axios.post('http://localhost:8000/api/create', {\n        question: questionText,\n        answer: answerText,\n        content: evaluationText\n      });\n      // 可以在这里添加提示保存成功的逻辑\n    } catch (error) {\n      console.error('Error saving record:', error);\n      // 可以在这里添加提示保存失败的逻辑\n    }\n  };\n  const generateEvaluation = async () => {\n    if (!answer) return; // 确保有答案再生成评价\n    // setHasEvaluationBeenGenerated(true); // 立即标记评价开始生成\n    setIsLoading(true);\n    try {\n      const response = await axios.post('http://localhost:8000/api/generate', {\n        prompt: answer,\n        // 使用传入的答案\n        ai: aiChoice\n      });\n      setEvaluation(response.data);\n      if (onEvaluationGenerated) {\n        onEvaluationGenerated(response.data); // 通知父组件生成的评价\n      }\n      // 保存答题记录\n      saveRecord(question, answer, response.data);\n      setIsLoading(false);\n    } catch (error) {\n      console.error('Error generating evaluation:', error);\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generateEvaluation,\n      disabled: isLoading || !answer,\n      title: !answer ? \"请先完成答案的输入\" : \"\",\n      children: isLoading ? '生成中...' : '生成评价'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), evaluation && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: evaluation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n_s(GenerateSection, \"MVxfLxEREj4fvCd/N7rDJF+hiqM=\");\n_c = GenerateSection;\nexport default GenerateSection;\nvar _c;\n$RefreshReg$(_c, \"GenerateSection\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","GenerateSection","question","answer","onEvaluationGenerated","evaluationService","disabled","_s","aiChoice","setAiChoice","evaluation","setEvaluation","isLoading","setIsLoading","saveRecord","questionText","answerText","evaluationText","post","content","error","console","generateEvaluation","response","prompt","ai","data","children","onClick","title","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/zxh/0.Me/Mylearn/AIcoding/mywork/interview-assistant-react_stroop/frontend/src/components/GenerateSection.jsx"],"sourcesContent":["// GenerateSection.jsx\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nfunction GenerateSection({ question, answer, onEvaluationGenerated, evaluationService, disabled }) {\n    const [aiChoice, setAiChoice] = useState('zhipuai');\n    const [evaluation, setEvaluation] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n\n    const saveRecord = async (questionText, answerText, evaluationText) => {\n        try {\n            await axios.post('http://localhost:8000/api/create', { \n                question: questionText, \n                answer: answerText, \n                content: evaluationText \n            });\n            // 可以在这里添加提示保存成功的逻辑\n        } catch (error) {\n            console.error('Error saving record:', error);\n            // 可以在这里添加提示保存失败的逻辑\n        }\n    };\n\n    const generateEvaluation = async () => {\n        if (!answer) return; // 确保有答案再生成评价\n        // setHasEvaluationBeenGenerated(true); // 立即标记评价开始生成\n        setIsLoading(true);\n\n        try {\n            const response = await axios.post('http://localhost:8000/api/generate', {\n                prompt: answer, // 使用传入的答案\n                ai: aiChoice\n            });\n            setEvaluation(response.data);\n            if (onEvaluationGenerated) {\n                onEvaluationGenerated(response.data); // 通知父组件生成的评价\n            }\n            // 保存答题记录\n            saveRecord(question, answer, response.data); \n            setIsLoading(false);\n        } catch (error) {\n            console.error('Error generating evaluation:', error);\n            setIsLoading(false);\n        }\n    };\n\n    return (\n        <div>\n        <button \n            onClick={generateEvaluation} \n            disabled={isLoading || !answer }\n            title={!answer ? \"请先完成答案的输入\" : \"\"}\n            >\n            {isLoading ? '生成中...' : '生成评价'}\n        </button>\n        {evaluation && <div>{evaluation}</div>}\n      </div>\n    );\n}\n\nexport default GenerateSection;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,eAAeA,CAAC;EAAEC,QAAQ;EAAEC,MAAM;EAAEC,qBAAqB;EAAEC,iBAAiB;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC/F,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,SAAS,CAAC;EACnD,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMiB,UAAU,GAAG,MAAAA,CAAOC,YAAY,EAAEC,UAAU,EAAEC,cAAc,KAAK;IACnE,IAAI;MACA,MAAMnB,KAAK,CAACoB,IAAI,CAAC,kCAAkC,EAAE;QACjDhB,QAAQ,EAAEa,YAAY;QACtBZ,MAAM,EAAEa,UAAU;QAClBG,OAAO,EAAEF;MACb,CAAC,CAAC;MACF;IACJ,CAAC,CAAC,OAAOG,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C;IACJ;EACJ,CAAC;EAED,MAAME,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI,CAACnB,MAAM,EAAE,OAAO,CAAC;IACrB;IACAU,YAAY,CAAC,IAAI,CAAC;IAElB,IAAI;MACA,MAAMU,QAAQ,GAAG,MAAMzB,KAAK,CAACoB,IAAI,CAAC,oCAAoC,EAAE;QACpEM,MAAM,EAAErB,MAAM;QAAE;QAChBsB,EAAE,EAAEjB;MACR,CAAC,CAAC;MACFG,aAAa,CAACY,QAAQ,CAACG,IAAI,CAAC;MAC5B,IAAItB,qBAAqB,EAAE;QACvBA,qBAAqB,CAACmB,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC;MAC1C;MACA;MACAZ,UAAU,CAACZ,QAAQ,EAAEC,MAAM,EAAEoB,QAAQ,CAACG,IAAI,CAAC;MAC3Cb,YAAY,CAAC,KAAK,CAAC;IACvB,CAAC,CAAC,OAAOO,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpDP,YAAY,CAAC,KAAK,CAAC;IACvB;EACJ,CAAC;EAED,oBACIb,OAAA;IAAA2B,QAAA,gBACA3B,OAAA;MACI4B,OAAO,EAAEN,kBAAmB;MAC5BhB,QAAQ,EAAEM,SAAS,IAAI,CAACT,MAAQ;MAChC0B,KAAK,EAAE,CAAC1B,MAAM,GAAG,WAAW,GAAG,EAAG;MAAAwB,QAAA,EAEjCf,SAAS,GAAG,QAAQ,GAAG;IAAM;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,EACRvB,UAAU,iBAAIV,OAAA;MAAA2B,QAAA,EAAMjB;IAAU;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEZ;AAAC1B,EAAA,CAtDQN,eAAe;AAAAiC,EAAA,GAAfjC,eAAe;AAwDxB,eAAeA,eAAe;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}