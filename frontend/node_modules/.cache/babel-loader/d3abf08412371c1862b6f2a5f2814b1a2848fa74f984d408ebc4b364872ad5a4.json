{"ast":null,"code":"var _jsxFileName = \"/Users/zxh/0.Me/Mylearn/AIcoding/mywork/interview-assistant-react_stroop/frontend/src/components/AudioRecorder.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AudioRecorder({\n  onTranscriptReady\n}) {\n  _s();\n  const [isRecording, setIsRecording] = useState(false);\n  const [countdown, setCountdown] = useState(20); // 设定录音时长\n  const mediaRecorderRef = useRef(null);\n  useEffect(() => {\n    // 倒计时逻辑\n    if (countdown === 0 && isRecording) {\n      stopRecording();\n    }\n    return () => clearInterval(mediaRecorderRef.current);\n  }, [countdown, isRecording]);\n  const startRecording = async () => {\n    // ...录音启动逻辑\n  };\n  const stopRecording = () => {\n    // ...录音停止逻辑\n  };\n  const uploadAudio = async audioBlob => {\n    // ...上传音频逻辑\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_s(AudioRecorder, \"ChNc66qIhSHcv5SODechCEeD6Ns=\");\n_c = AudioRecorder;\nexport default AudioRecorder;\nvar _c;\n$RefreshReg$(_c, \"AudioRecorder\");","map":{"version":3,"names":["React","useState","useRef","useEffect","axios","jsxDEV","_jsxDEV","AudioRecorder","onTranscriptReady","_s","isRecording","setIsRecording","countdown","setCountdown","mediaRecorderRef","stopRecording","clearInterval","current","startRecording","uploadAudio","audioBlob","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/zxh/0.Me/Mylearn/AIcoding/mywork/interview-assistant-react_stroop/frontend/src/components/AudioRecorder.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction AudioRecorder({ onTranscriptReady }) {\n    const [isRecording, setIsRecording] = useState(false);\n    const [countdown, setCountdown] = useState(20); // 设定录音时长\n    const mediaRecorderRef = useRef(null);\n\n    useEffect(() => {\n        // 倒计时逻辑\n        if (countdown === 0 && isRecording) {\n            stopRecording();\n        }\n        return () => clearInterval(mediaRecorderRef.current);\n    }, [countdown, isRecording]);\n\n    const startRecording = async () => {\n        // ...录音启动逻辑\n    };\n\n    const stopRecording = () => {\n        // ...录音停止逻辑\n    };\n\n    const uploadAudio = async (audioBlob) => {\n        // ...上传音频逻辑\n    };\n\n    return (\n        <div>\n            {/* ...录音控制UI */}\n        </div>\n    );\n}\n\nexport default AudioRecorder;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,aAAaA,CAAC;EAAEC;AAAkB,CAAC,EAAE;EAAAC,EAAA;EAC1C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAChD,MAAMa,gBAAgB,GAAGZ,MAAM,CAAC,IAAI,CAAC;EAErCC,SAAS,CAAC,MAAM;IACZ;IACA,IAAIS,SAAS,KAAK,CAAC,IAAIF,WAAW,EAAE;MAChCK,aAAa,CAAC,CAAC;IACnB;IACA,OAAO,MAAMC,aAAa,CAACF,gBAAgB,CAACG,OAAO,CAAC;EACxD,CAAC,EAAE,CAACL,SAAS,EAAEF,WAAW,CAAC,CAAC;EAE5B,MAAMQ,cAAc,GAAG,MAAAA,CAAA,KAAY;IAC/B;EAAA,CACH;EAED,MAAMH,aAAa,GAAGA,CAAA,KAAM;IACxB;EAAA,CACH;EAED,MAAMI,WAAW,GAAG,MAAOC,SAAS,IAAK;IACrC;EAAA,CACH;EAED,oBACId,OAAA;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEK,CAAC;AAEd;AAACf,EAAA,CA9BQF,aAAa;AAAAkB,EAAA,GAAblB,aAAa;AAgCtB,eAAeA,aAAa;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}