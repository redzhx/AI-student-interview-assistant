{"ast":null,"code":"var _jsxFileName = \"/Users/zxh/0.Me/Mylearn/AIcoding/mywork/interview-assistant-react_stroop/frontend/src/components/AnswerSection-0.jsx\",\n  _s = $RefreshSig$();\n// AnswerSection-old.jsx\nimport React, { useState } from 'react';\nimport AudioRecorder from './AudioRecorder';\nimport TextInput from './TextInput';\nimport { Button, Spinner } from 'react-bootstrap';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AnswerSection({\n  onAnswerSubmit,\n  disabled\n}) {\n  _s();\n  const [isRecording, setIsRecording] = useState(false);\n  const [countdown, setCountdown] = useState(20);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [transcript, setTranscript] = useState(''); // 定义 transcript 状态\n  const [audioUrl, setAudioUrl] = useState(''); // 定义 audioUrl 状态\n\n  const [showTextInput, setShowTextInput] = useState(false);\n  // const [answer, setAnswer] = useState(''); // 正确声明 answer 状态和 setAnswer 函数\n\n  const handleAudioTranscriptReady = (transcript, audioUrl) => {\n    //   setIsRecording(false); // 停止录音\n    setTranscript(transcript); // 设置转写文本\n    setAudioUrl(audioUrl); // 设置录音文件的 URL\n    onAnswerSubmit(transcript); // 提交答案进行评价\n  };\n  const toggleAnswerMode = () => {\n    setIsRecording(!isRecording);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"answerarea\",\n    className: \"container  mt-4\",\n    children: [transcript && !isRecording && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n        src: audioUrl,\n        controls: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: transcript\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true), isRecording ? /*#__PURE__*/_jsxDEV(AudioRecorder, {\n      onTranscriptReady: handleAudioTranscriptReady,\n      autoStart: isRecording\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(TextInput, {\n      onTextSubmit: onAnswerSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      onClick: toggleAnswerMode,\n      disabled: disabled,\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n        className: isRecording ? \"fa-solid fa-keyboard\" : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), isRecording ? '' : '取消']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n_s(AnswerSection, \"pUnf8GHpIYlfZKqaZkmksek/WC0=\");\n_c = AnswerSection;\nexport default AnswerSection;\nvar _c;\n$RefreshReg$(_c, \"AnswerSection\");","map":{"version":3,"names":["React","useState","AudioRecorder","TextInput","Button","Spinner","jsxDEV","_jsxDEV","Fragment","_Fragment","AnswerSection","onAnswerSubmit","disabled","_s","isRecording","setIsRecording","countdown","setCountdown","error","setError","loading","setLoading","transcript","setTranscript","audioUrl","setAudioUrl","showTextInput","setShowTextInput","handleAudioTranscriptReady","toggleAnswerMode","id","className","children","src","controls","fileName","_jsxFileName","lineNumber","columnNumber","onTranscriptReady","autoStart","onTextSubmit","variant","onClick","_c","$RefreshReg$"],"sources":["/Users/zxh/0.Me/Mylearn/AIcoding/mywork/interview-assistant-react_stroop/frontend/src/components/AnswerSection-0.jsx"],"sourcesContent":["// AnswerSection-old.jsx\nimport React, {  useState } from 'react';\nimport AudioRecorder from './AudioRecorder';\nimport TextInput from './TextInput';\nimport { Button, Spinner } from 'react-bootstrap';\nimport '../App.css';\n\nfunction AnswerSection({ onAnswerSubmit,disabled, }) {\n\n  const [isRecording, setIsRecording] = useState(false);\n  const [countdown, setCountdown] = useState(20);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [transcript, setTranscript] = useState(''); // 定义 transcript 状态\n  const [audioUrl, setAudioUrl] = useState(''); // 定义 audioUrl 状态\n\n  const [showTextInput, setShowTextInput] = useState(false);\n  // const [answer, setAnswer] = useState(''); // 正确声明 answer 状态和 setAnswer 函数\n\n    const handleAudioTranscriptReady = (transcript, audioUrl) => {\n    //   setIsRecording(false); // 停止录音\n      setTranscript(transcript); // 设置转写文本\n      setAudioUrl(audioUrl); // 设置录音文件的 URL\n      onAnswerSubmit(transcript); // 提交答案进行评价\n  };\n\n    const toggleAnswerMode = () => {\n        setIsRecording(!isRecording);\n    };\n\n\n    return (\n        <div id=\"answerarea\" className=\"container  mt-4\">\n            {transcript && !isRecording && (\n            <>\n              <audio src={audioUrl} controls />\n              <p>{transcript}</p>\n            </>\n          )}\n          {isRecording ? (\n            <AudioRecorder onTranscriptReady={handleAudioTranscriptReady} autoStart={isRecording} />\n          ) : (\n            <TextInput onTextSubmit={onAnswerSubmit} />\n            )}\n          \n          <Button variant=\"primary\" onClick={toggleAnswerMode}  disabled={disabled}> {/* 使用 disabled 属性 */}\n            <i className={isRecording ? \"fa-solid fa-keyboard\" : \"\"}></i>\n            {isRecording ? '' : '取消'}\n          </Button>\n        </div>\n    );\n}\nexport default AnswerSection;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}