{"ast":null,"code":"var _jsxFileName = \"/Users/zxh/0.Me/Mylearn/AIcoding/wendyz/W6-W8_FinalTask/interview-assistant/frontend/src/components/QuestionDisplay.jsx\",\n  _s = $RefreshSig$();\n// frontend/src/components/QuestionDisplay.jsx\nimport React, { useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { useSettings } from './SettingsContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuestionDisplay({\n  question,\n  ttsService\n}) {\n  _s();\n  const audioRef = useRef(null);\n  const {\n    isMuted\n  } = useSettings(); // 获取静音模式状态 stopAudio 上面括号里去掉了\n\n  useEffect(() => {\n    if (question && !isMuted) {\n      playAudio(question);\n    }\n\n    // 清理函数，在组件卸载时停止音频播放\n    return () => {\n      // 停止通过 HTMLAudioElement 播放的音频\n      if (audioRef.current) {\n        audioRef.current.pause();\n      }\n      // 停止通过 SpeechSynthesis 播放的音频\n      speechSynthesis.cancel();\n    };\n  }, [question, isMuted]); // 添加 isMuted 作为依赖\n\n  const playAudio = text => {\n    if (isMuted) return; // 静音模式，不执行任何操作\n\n    switch (ttsService) {\n      case 'browser':\n        const utterance = new SpeechSynthesisUtterance(text);\n        speechSynthesis.speak(utterance);\n        break;\n      case 'minimax':\n        axios.post('http://localhost:8000/api/text-to-speech/minimax', {\n          text\n        }, {\n          responseType: 'blob'\n        }).then(response => playAudioBlob(response.data)).catch(error => console.error('Error with Minimax TTS:', error));\n        break;\n      case 'openai':\n        axios.post('http://localhost:8000/api/text-to-speech', {\n          text\n        }, {\n          responseType: 'blob'\n        }).then(response => playAudioBlob(response.data)).catch(error => console.error('Error with OpenAI TTS:', error));\n        break;\n      default:\n        console.error('Unknown TTS service:', ttsService);\n    }\n  };\n  const playAudioBlob = blob => {\n    const audioUrl = URL.createObjectURL(blob);\n    const audio = new Audio(audioUrl);\n    audio.play();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: question || \"没有问题\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n_s(QuestionDisplay, \"Rql3OlWYptH0+lVHSgY8C8xGu3M=\", false, function () {\n  return [useSettings];\n});\n_c = QuestionDisplay;\nexport default QuestionDisplay;\nvar _c;\n$RefreshReg$(_c, \"QuestionDisplay\");","map":{"version":3,"names":["React","useEffect","useRef","axios","useSettings","jsxDEV","_jsxDEV","QuestionDisplay","question","ttsService","_s","audioRef","isMuted","playAudio","current","pause","speechSynthesis","cancel","text","utterance","SpeechSynthesisUtterance","speak","post","responseType","then","response","playAudioBlob","data","catch","error","console","blob","audioUrl","URL","createObjectURL","audio","Audio","play","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/zxh/0.Me/Mylearn/AIcoding/wendyz/W6-W8_FinalTask/interview-assistant/frontend/src/components/QuestionDisplay.jsx"],"sourcesContent":["// frontend/src/components/QuestionDisplay.jsx\nimport React, { useEffect,useRef } from 'react';\nimport axios from 'axios';\nimport { useSettings } from './SettingsContext'; \n\n\nfunction QuestionDisplay({ question, ttsService,  }) {\n    const audioRef = useRef(null);\n    const { isMuted } = useSettings(); // 获取静音模式状态 stopAudio 上面括号里去掉了\n\n    useEffect(() => {\n        if (question && !isMuted) {\n            playAudio(question);\n        }\n\n        // 清理函数，在组件卸载时停止音频播放\n        return () => {       \n        // 停止通过 HTMLAudioElement 播放的音频\n            if (audioRef.current) {\n                audioRef.current.pause();\n            }\n        // 停止通过 SpeechSynthesis 播放的音频\n            speechSynthesis.cancel();\n        };\n    }, [question, isMuted]); // 添加 isMuted 作为依赖\n\n    const playAudio = (text) => {\n        if (isMuted) return; // 静音模式，不执行任何操作\n\n        switch (ttsService) {\n            \n            case 'browser':\n                const utterance = new SpeechSynthesisUtterance(text);\n                speechSynthesis.speak(utterance);\n                break;\n            case 'minimax':\n                axios.post('http://localhost:8000/api/text-to-speech/minimax', { text }, { responseType: 'blob' })\n                    .then(response => playAudioBlob(response.data))\n                    .catch(error => console.error('Error with Minimax TTS:', error));\n                break;\n            case 'openai':\n                axios.post('http://localhost:8000/api/text-to-speech', { text }, { responseType: 'blob' })\n                    .then(response => playAudioBlob(response.data))\n                    .catch(error => console.error('Error with OpenAI TTS:', error));\n                break;\n            \n            default:\n                console.error('Unknown TTS service:', ttsService);\n\n        }\n    };\n\n    const playAudioBlob = (blob) => {\n        const audioUrl = URL.createObjectURL(blob);\n        const audio = new Audio(audioUrl);\n        audio.play();\n    };\n\n    return (\n        <div>\n            {question || \"没有问题\"}\n        </div>\n    );\n}\n\nexport default QuestionDisplay;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAACC,MAAM,QAAQ,OAAO;AAC/C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGhD,SAASC,eAAeA,CAAC;EAAEC,QAAQ;EAAEC;AAAa,CAAC,EAAE;EAAAC,EAAA;EACjD,MAAMC,QAAQ,GAAGT,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAM;IAAEU;EAAQ,CAAC,GAAGR,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEnCH,SAAS,CAAC,MAAM;IACZ,IAAIO,QAAQ,IAAI,CAACI,OAAO,EAAE;MACtBC,SAAS,CAACL,QAAQ,CAAC;IACvB;;IAEA;IACA,OAAO,MAAM;MACb;MACI,IAAIG,QAAQ,CAACG,OAAO,EAAE;QAClBH,QAAQ,CAACG,OAAO,CAACC,KAAK,CAAC,CAAC;MAC5B;MACJ;MACIC,eAAe,CAACC,MAAM,CAAC,CAAC;IAC5B,CAAC;EACL,CAAC,EAAE,CAACT,QAAQ,EAAEI,OAAO,CAAC,CAAC,CAAC,CAAC;;EAEzB,MAAMC,SAAS,GAAIK,IAAI,IAAK;IACxB,IAAIN,OAAO,EAAE,OAAO,CAAC;;IAErB,QAAQH,UAAU;MAEd,KAAK,SAAS;QACV,MAAMU,SAAS,GAAG,IAAIC,wBAAwB,CAACF,IAAI,CAAC;QACpDF,eAAe,CAACK,KAAK,CAACF,SAAS,CAAC;QAChC;MACJ,KAAK,SAAS;QACVhB,KAAK,CAACmB,IAAI,CAAC,kDAAkD,EAAE;UAAEJ;QAAK,CAAC,EAAE;UAAEK,YAAY,EAAE;QAAO,CAAC,CAAC,CAC7FC,IAAI,CAACC,QAAQ,IAAIC,aAAa,CAACD,QAAQ,CAACE,IAAI,CAAC,CAAC,CAC9CC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC,CAAC;QACpE;MACJ,KAAK,QAAQ;QACT1B,KAAK,CAACmB,IAAI,CAAC,0CAA0C,EAAE;UAAEJ;QAAK,CAAC,EAAE;UAAEK,YAAY,EAAE;QAAO,CAAC,CAAC,CACrFC,IAAI,CAACC,QAAQ,IAAIC,aAAa,CAACD,QAAQ,CAACE,IAAI,CAAC,CAAC,CAC9CC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC,CAAC;QACnE;MAEJ;QACIC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEpB,UAAU,CAAC;IAEzD;EACJ,CAAC;EAED,MAAMiB,aAAa,GAAIK,IAAI,IAAK;IAC5B,MAAMC,QAAQ,GAAGC,GAAG,CAACC,eAAe,CAACH,IAAI,CAAC;IAC1C,MAAMI,KAAK,GAAG,IAAIC,KAAK,CAACJ,QAAQ,CAAC;IACjCG,KAAK,CAACE,IAAI,CAAC,CAAC;EAChB,CAAC;EAED,oBACI/B,OAAA;IAAAgC,QAAA,EACK9B,QAAQ,IAAI;EAAM;IAAA+B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClB,CAAC;AAEd;AAAChC,EAAA,CAzDQH,eAAe;EAAA,QAEAH,WAAW;AAAA;AAAAuC,EAAA,GAF1BpC,eAAe;AA2DxB,eAAeA,eAAe;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}